[{"C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\firebase.js":"1","C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\Components\\Links.js":"2","C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\Components\\LinkForm.js":"3","C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\index.js":"4","C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\reportWebVitals.js":"5"},{"size":638,"mtime":1606341783442,"results":"6","hashOfConfig":"7"},{"size":2682,"mtime":1606346515759,"results":"8","hashOfConfig":"7"},{"size":3102,"mtime":1606346767013,"results":"9","hashOfConfig":"7"},{"size":574,"mtime":1606342526743,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"7ky8a9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\firebase.js",[],["24","25"],"C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\Components\\Links.js",[],"C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\Components\\LinkForm.js",["26"],"import React, { useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst LinkForm = (props) => {\r\n\r\n    const initialStateValues = {\r\n        url: '',\r\n        name: '',\r\n        description: ''\r\n    };\r\n\r\n    const [values, setValues] = useState(initialStateValues);\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({ ...values, [name]: value });\r\n    }\r\n\r\n    const validateURL = str => {\r\n        return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(str);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(!validateURL(values.url)){\r\n            return toast('Invalid url', {\r\n                type: 'warning',\r\n                autoClose: 1000\r\n            });\r\n        }\r\n        props.addOrEditLink(values);\r\n        setValues({ ...initialStateValues });\r\n    }\r\n\r\n    const getLinkById = async id => {\r\n        const doc = await db.collection('links').doc(id).get();\r\n        setValues({...doc.data()});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.currentId === '') {\r\n            setValues({ ...initialStateValues })\r\n        } else {\r\n            getLinkById(props.currentId);\r\n        }\r\n    }, [props.currentId])\r\n\r\n    return (\r\n        <form className=\"card card-body\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">insert_link</i>\r\n                </div>\r\n                <input type=\"text\"\r\n                    className=\"form-control\" placeholder=\"https://someurl.com\"\r\n                    name=\"url\" onChange={handleInputChange} value={values.url} />\r\n            </div>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-text bg-light\">\r\n                    <i className=\"material-icons\">create</i>\r\n                </div>\r\n                <input type=\"text\"\r\n                    className=\"form-control\" placeholder=\"Website name\"\r\n                    name=\"name\" onChange={handleInputChange} value={values.name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <textarea name=\"description\" rows=\"3\" className=\"form-control\"\r\n                    placeholder=\"Write a description\" onChange={handleInputChange} value={values.description}>\r\n                </textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary btn-block\">\r\n                {props.currentId === '' ? 'Save' : 'Update'}\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LinkForm;","C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\index.js",[],"C:\\MIS COSAS\\PROG\\REACT JS\\firestore-crud-react\\src\\reportWebVitals.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":47,"column":8,"nodeType":"33","endLine":47,"endColumn":25,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialStateValues'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [initialStateValues, props.currentId]",{"range":"40","text":"41"},[1676,1693],"[initialStateValues, props.currentId]"]